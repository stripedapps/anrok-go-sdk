/*
Anrok API

# API reference  The Anrok API server is accessible at “https://api.anrok.com”.  All requests are HTTP POSTs with JSON in the body.  Authentication is via an HTTP header “Authorization: Bearer {sellerId}/{apiKeyId}/secret.{apiKeySecret}”.  The default rate limit for a seller account is 10 API requests per second. 

API version: 1.0.0
Contact: support@anrok.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductIdMappingsAddRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductIdMappingsAddRequest{}

// ProductIdMappingsAddRequest struct for ProductIdMappingsAddRequest
type ProductIdMappingsAddRequest struct {
	// Source Product ID from billing system.
	SourceId string `json:"sourceId"`
	// Target Product ID on Anrok. This product must already exist in Anrok.
	TargetId string `json:"targetId"`
	// Whether this request should override an existing Source ID mapping
	ShouldOverwrite *bool `json:"shouldOverwrite,omitempty"`
}

// NewProductIdMappingsAddRequest instantiates a new ProductIdMappingsAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductIdMappingsAddRequest(sourceId string, targetId string) *ProductIdMappingsAddRequest {
	this := ProductIdMappingsAddRequest{}
	this.SourceId = sourceId
	this.TargetId = targetId
	var shouldOverwrite bool = false
	this.ShouldOverwrite = &shouldOverwrite
	return &this
}

// NewProductIdMappingsAddRequestWithDefaults instantiates a new ProductIdMappingsAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductIdMappingsAddRequestWithDefaults() *ProductIdMappingsAddRequest {
	this := ProductIdMappingsAddRequest{}
	var shouldOverwrite bool = false
	this.ShouldOverwrite = &shouldOverwrite
	return &this
}

// GetSourceId returns the SourceId field value
func (o *ProductIdMappingsAddRequest) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *ProductIdMappingsAddRequest) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *ProductIdMappingsAddRequest) SetSourceId(v string) {
	o.SourceId = v
}

// GetTargetId returns the TargetId field value
func (o *ProductIdMappingsAddRequest) GetTargetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value
// and a boolean to check if the value has been set.
func (o *ProductIdMappingsAddRequest) GetTargetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetId, true
}

// SetTargetId sets field value
func (o *ProductIdMappingsAddRequest) SetTargetId(v string) {
	o.TargetId = v
}

// GetShouldOverwrite returns the ShouldOverwrite field value if set, zero value otherwise.
func (o *ProductIdMappingsAddRequest) GetShouldOverwrite() bool {
	if o == nil || IsNil(o.ShouldOverwrite) {
		var ret bool
		return ret
	}
	return *o.ShouldOverwrite
}

// GetShouldOverwriteOk returns a tuple with the ShouldOverwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductIdMappingsAddRequest) GetShouldOverwriteOk() (*bool, bool) {
	if o == nil || IsNil(o.ShouldOverwrite) {
		return nil, false
	}
	return o.ShouldOverwrite, true
}

// HasShouldOverwrite returns a boolean if a field has been set.
func (o *ProductIdMappingsAddRequest) HasShouldOverwrite() bool {
	if o != nil && !IsNil(o.ShouldOverwrite) {
		return true
	}

	return false
}

// SetShouldOverwrite gets a reference to the given bool and assigns it to the ShouldOverwrite field.
func (o *ProductIdMappingsAddRequest) SetShouldOverwrite(v bool) {
	o.ShouldOverwrite = &v
}

func (o ProductIdMappingsAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductIdMappingsAddRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceId"] = o.SourceId
	toSerialize["targetId"] = o.TargetId
	if !IsNil(o.ShouldOverwrite) {
		toSerialize["shouldOverwrite"] = o.ShouldOverwrite
	}
	return toSerialize, nil
}

type NullableProductIdMappingsAddRequest struct {
	value *ProductIdMappingsAddRequest
	isSet bool
}

func (v NullableProductIdMappingsAddRequest) Get() *ProductIdMappingsAddRequest {
	return v.value
}

func (v *NullableProductIdMappingsAddRequest) Set(val *ProductIdMappingsAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProductIdMappingsAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProductIdMappingsAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductIdMappingsAddRequest(val *ProductIdMappingsAddRequest) *NullableProductIdMappingsAddRequest {
	return &NullableProductIdMappingsAddRequest{value: val, isSet: true}
}

func (v NullableProductIdMappingsAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductIdMappingsAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


