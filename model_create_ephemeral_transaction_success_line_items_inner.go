/*
Anrok API

# API reference  The Anrok API server is accessible at “https://api.anrok.com”.  All requests are HTTP POSTs with JSON in the body.  Authentication is via an HTTP header “Authorization: Bearer {sellerId}/{apiKeyId}/secret.{apiKeySecret}”.  The default rate limit for a seller account is 10 API requests per second. 

API version: 1.0.0
Contact: support@anrok.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateEphemeralTransactionSuccessLineItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEphemeralTransactionSuccessLineItemsInner{}

// CreateEphemeralTransactionSuccessLineItemsInner struct for CreateEphemeralTransactionSuccessLineItemsInner
type CreateEphemeralTransactionSuccessLineItemsInner struct {
	// The tax amount to collect for the line item, in the smallest denomination of the currency (e.g. cents or pennies)
	TaxAmountToCollect *int64 `json:"taxAmountToCollect,omitempty"`
}

// NewCreateEphemeralTransactionSuccessLineItemsInner instantiates a new CreateEphemeralTransactionSuccessLineItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEphemeralTransactionSuccessLineItemsInner() *CreateEphemeralTransactionSuccessLineItemsInner {
	this := CreateEphemeralTransactionSuccessLineItemsInner{}
	return &this
}

// NewCreateEphemeralTransactionSuccessLineItemsInnerWithDefaults instantiates a new CreateEphemeralTransactionSuccessLineItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEphemeralTransactionSuccessLineItemsInnerWithDefaults() *CreateEphemeralTransactionSuccessLineItemsInner {
	this := CreateEphemeralTransactionSuccessLineItemsInner{}
	return &this
}

// GetTaxAmountToCollect returns the TaxAmountToCollect field value if set, zero value otherwise.
func (o *CreateEphemeralTransactionSuccessLineItemsInner) GetTaxAmountToCollect() int64 {
	if o == nil || IsNil(o.TaxAmountToCollect) {
		var ret int64
		return ret
	}
	return *o.TaxAmountToCollect
}

// GetTaxAmountToCollectOk returns a tuple with the TaxAmountToCollect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInner) GetTaxAmountToCollectOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxAmountToCollect) {
		return nil, false
	}
	return o.TaxAmountToCollect, true
}

// HasTaxAmountToCollect returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInner) HasTaxAmountToCollect() bool {
	if o != nil && !IsNil(o.TaxAmountToCollect) {
		return true
	}

	return false
}

// SetTaxAmountToCollect gets a reference to the given int64 and assigns it to the TaxAmountToCollect field.
func (o *CreateEphemeralTransactionSuccessLineItemsInner) SetTaxAmountToCollect(v int64) {
	o.TaxAmountToCollect = &v
}

func (o CreateEphemeralTransactionSuccessLineItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEphemeralTransactionSuccessLineItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaxAmountToCollect) {
		toSerialize["taxAmountToCollect"] = o.TaxAmountToCollect
	}
	return toSerialize, nil
}

type NullableCreateEphemeralTransactionSuccessLineItemsInner struct {
	value *CreateEphemeralTransactionSuccessLineItemsInner
	isSet bool
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInner) Get() *CreateEphemeralTransactionSuccessLineItemsInner {
	return v.value
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInner) Set(val *CreateEphemeralTransactionSuccessLineItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEphemeralTransactionSuccessLineItemsInner(val *CreateEphemeralTransactionSuccessLineItemsInner) *NullableCreateEphemeralTransactionSuccessLineItemsInner {
	return &NullableCreateEphemeralTransactionSuccessLineItemsInner{value: val, isSet: true}
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


