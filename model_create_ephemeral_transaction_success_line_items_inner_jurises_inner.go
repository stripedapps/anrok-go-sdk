/*
Anrok API

# API reference  The Anrok API server is accessible at `https://api.anrok.com`.  All requests are HTTP POSTs with JSON in the body.  Authentication is via an HTTP header `Authorization: Bearer {apiKey}`.  The default rate limit for a seller account is 10 API requests per second. 

API version: 1.1
Contact: support@anrok.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner{}

// CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner struct for CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner
type CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner struct {
	// The name of the jurisdiction.
	Name *string `json:"name,omitempty"`
	NotTaxedReason NullableNotTaxedReason `json:"notTaxedReason,omitempty"`
	// A list of taxes for the line item in the jurisdiction, or null if it is not taxed.
	Taxes []CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner `json:"taxes,omitempty"`
}

// NewCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner instantiates a new CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner() *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner {
	this := CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner{}
	return &this
}

// NewCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerWithDefaults instantiates a new CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerWithDefaults() *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner {
	this := CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) SetName(v string) {
	o.Name = &v
}

// GetNotTaxedReason returns the NotTaxedReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) GetNotTaxedReason() NotTaxedReason {
	if o == nil || IsNil(o.NotTaxedReason.Get()) {
		var ret NotTaxedReason
		return ret
	}
	return *o.NotTaxedReason.Get()
}

// GetNotTaxedReasonOk returns a tuple with the NotTaxedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) GetNotTaxedReasonOk() (*NotTaxedReason, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotTaxedReason.Get(), o.NotTaxedReason.IsSet()
}

// HasNotTaxedReason returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) HasNotTaxedReason() bool {
	if o != nil && o.NotTaxedReason.IsSet() {
		return true
	}

	return false
}

// SetNotTaxedReason gets a reference to the given NullableNotTaxedReason and assigns it to the NotTaxedReason field.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) SetNotTaxedReason(v NotTaxedReason) {
	o.NotTaxedReason.Set(&v)
}
// SetNotTaxedReasonNil sets the value for NotTaxedReason to be an explicit nil
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) SetNotTaxedReasonNil() {
	o.NotTaxedReason.Set(nil)
}

// UnsetNotTaxedReason ensures that no value is present for NotTaxedReason, not even an explicit nil
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) UnsetNotTaxedReason() {
	o.NotTaxedReason.Unset()
}

// GetTaxes returns the Taxes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) GetTaxes() []CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner {
	if o == nil {
		var ret []CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner
		return ret
	}
	return o.Taxes
}

// GetTaxesOk returns a tuple with the Taxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) GetTaxesOk() ([]CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner, bool) {
	if o == nil || IsNil(o.Taxes) {
		return nil, false
	}
	return o.Taxes, true
}

// HasTaxes returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) HasTaxes() bool {
	if o != nil && !IsNil(o.Taxes) {
		return true
	}

	return false
}

// SetTaxes gets a reference to the given []CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner and assigns it to the Taxes field.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) SetTaxes(v []CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) {
	o.Taxes = v
}

func (o CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.NotTaxedReason.IsSet() {
		toSerialize["notTaxedReason"] = o.NotTaxedReason.Get()
	}
	if o.Taxes != nil {
		toSerialize["taxes"] = o.Taxes
	}
	return toSerialize, nil
}

type NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner struct {
	value *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner
	isSet bool
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) Get() *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner {
	return v.value
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) Set(val *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner(val *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) *NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner {
	return &NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner{value: val, isSet: true}
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


