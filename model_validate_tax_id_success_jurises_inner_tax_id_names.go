/*
Anrok API

# API reference  The Anrok API server is accessible at `https://api.anrok.com`.  All requests are HTTP POSTs with JSON in the body.  Authentication is via an HTTP header `Authorization: Bearer {apiKey}`.  The default rate limit for a seller account is 10 API requests per second. 

API version: 1.1
Contact: support@anrok.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValidateTaxIdSuccessJurisesInnerTaxIdNames type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateTaxIdSuccessJurisesInnerTaxIdNames{}

// ValidateTaxIdSuccessJurisesInnerTaxIdNames List of applicable tax IDs to collect/validate for the jurisdiction.
type ValidateTaxIdSuccessJurisesInnerTaxIdNames struct {
	// A user-friendly tax ID name.
	Name *string `json:"name,omitempty"`
	// The tax ID abbreviation (if any).
	Abbreviation NullableString `json:"abbreviation,omitempty"`
}

// NewValidateTaxIdSuccessJurisesInnerTaxIdNames instantiates a new ValidateTaxIdSuccessJurisesInnerTaxIdNames object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateTaxIdSuccessJurisesInnerTaxIdNames() *ValidateTaxIdSuccessJurisesInnerTaxIdNames {
	this := ValidateTaxIdSuccessJurisesInnerTaxIdNames{}
	return &this
}

// NewValidateTaxIdSuccessJurisesInnerTaxIdNamesWithDefaults instantiates a new ValidateTaxIdSuccessJurisesInnerTaxIdNames object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateTaxIdSuccessJurisesInnerTaxIdNamesWithDefaults() *ValidateTaxIdSuccessJurisesInnerTaxIdNames {
	this := ValidateTaxIdSuccessJurisesInnerTaxIdNames{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) SetName(v string) {
	o.Name = &v
}

// GetAbbreviation returns the Abbreviation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) GetAbbreviation() string {
	if o == nil || IsNil(o.Abbreviation.Get()) {
		var ret string
		return ret
	}
	return *o.Abbreviation.Get()
}

// GetAbbreviationOk returns a tuple with the Abbreviation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) GetAbbreviationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Abbreviation.Get(), o.Abbreviation.IsSet()
}

// HasAbbreviation returns a boolean if a field has been set.
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) HasAbbreviation() bool {
	if o != nil && o.Abbreviation.IsSet() {
		return true
	}

	return false
}

// SetAbbreviation gets a reference to the given NullableString and assigns it to the Abbreviation field.
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) SetAbbreviation(v string) {
	o.Abbreviation.Set(&v)
}
// SetAbbreviationNil sets the value for Abbreviation to be an explicit nil
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) SetAbbreviationNil() {
	o.Abbreviation.Set(nil)
}

// UnsetAbbreviation ensures that no value is present for Abbreviation, not even an explicit nil
func (o *ValidateTaxIdSuccessJurisesInnerTaxIdNames) UnsetAbbreviation() {
	o.Abbreviation.Unset()
}

func (o ValidateTaxIdSuccessJurisesInnerTaxIdNames) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateTaxIdSuccessJurisesInnerTaxIdNames) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Abbreviation.IsSet() {
		toSerialize["abbreviation"] = o.Abbreviation.Get()
	}
	return toSerialize, nil
}

type NullableValidateTaxIdSuccessJurisesInnerTaxIdNames struct {
	value *ValidateTaxIdSuccessJurisesInnerTaxIdNames
	isSet bool
}

func (v NullableValidateTaxIdSuccessJurisesInnerTaxIdNames) Get() *ValidateTaxIdSuccessJurisesInnerTaxIdNames {
	return v.value
}

func (v *NullableValidateTaxIdSuccessJurisesInnerTaxIdNames) Set(val *ValidateTaxIdSuccessJurisesInnerTaxIdNames) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateTaxIdSuccessJurisesInnerTaxIdNames) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateTaxIdSuccessJurisesInnerTaxIdNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateTaxIdSuccessJurisesInnerTaxIdNames(val *ValidateTaxIdSuccessJurisesInnerTaxIdNames) *NullableValidateTaxIdSuccessJurisesInnerTaxIdNames {
	return &NullableValidateTaxIdSuccessJurisesInnerTaxIdNames{value: val, isSet: true}
}

func (v NullableValidateTaxIdSuccessJurisesInnerTaxIdNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateTaxIdSuccessJurisesInnerTaxIdNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


