/*
Anrok API

# API reference  The Anrok API server is accessible at “https://api.anrok.com”.  All requests are HTTP POSTs with JSON in the body.  Authentication is via an HTTP header “Authorization: Bearer {sellerId}/{apiKeyId}/secret.{apiKeySecret}”.  The default rate limit for a seller account is 10 API requests per second. 

API version: 0.0.1
Contact: support@anrok.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CertificatesCreate200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CertificatesCreate200Response{}

// CertificatesCreate200Response struct for CertificatesCreate200Response
type CertificatesCreate200Response struct {
	// Certificate ID
	Id interface{} `json:"id,omitempty"`
}

// NewCertificatesCreate200Response instantiates a new CertificatesCreate200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificatesCreate200Response() *CertificatesCreate200Response {
	this := CertificatesCreate200Response{}
	return &this
}

// NewCertificatesCreate200ResponseWithDefaults instantiates a new CertificatesCreate200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificatesCreate200ResponseWithDefaults() *CertificatesCreate200Response {
	this := CertificatesCreate200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CertificatesCreate200Response) GetId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CertificatesCreate200Response) GetIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return &o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CertificatesCreate200Response) HasId() bool {
	if o != nil && IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given interface{} and assigns it to the Id field.
func (o *CertificatesCreate200Response) SetId(v interface{}) {
	o.Id = v
}

func (o CertificatesCreate200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CertificatesCreate200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableCertificatesCreate200Response struct {
	value *CertificatesCreate200Response
	isSet bool
}

func (v NullableCertificatesCreate200Response) Get() *CertificatesCreate200Response {
	return v.value
}

func (v *NullableCertificatesCreate200Response) Set(val *CertificatesCreate200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificatesCreate200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificatesCreate200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificatesCreate200Response(val *CertificatesCreate200Response) *NullableCertificatesCreate200Response {
	return &NullableCertificatesCreate200Response{value: val, isSet: true}
}

func (v NullableCertificatesCreate200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificatesCreate200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


