/*
Anrok API

# API reference  The Anrok API server is accessible at `https://api.anrok.com`.  All requests are HTTP POSTs with JSON in the body.  Authentication is via an HTTP header `Authorization: Bearer {apiKey}`.  The default rate limit for a seller account is 10 API requests per second. 

API version: 1.1
Contact: support@anrok.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner{}

// CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner struct for CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner
type CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner struct {
	// The name or abbreviation of the tax type (e.g. \"VAT\" or \"Tax\").
	TaxName *string `json:"taxName,omitempty"`
	// The amount on which tax is calculated, in the smallest denomination of the currency (e.g. cents or pennies).
	TaxableAmount *string `json:"taxableAmount,omitempty"`
	// The amount of tax, in the smallest denomination of the currency (e.g. cents or pennies).
	TaxAmount *string `json:"taxAmount,omitempty"`
	// The tax rate, between 0 and 1. Make sure to include the taxableAmount in your tax rate calculations.
	TaxRate *string `json:"taxRate,omitempty"`
}

// NewCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner instantiates a new CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner() *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner {
	this := CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner{}
	return &this
}

// NewCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInnerWithDefaults instantiates a new CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInnerWithDefaults() *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner {
	this := CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner{}
	return &this
}

// GetTaxName returns the TaxName field value if set, zero value otherwise.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) GetTaxName() string {
	if o == nil || IsNil(o.TaxName) {
		var ret string
		return ret
	}
	return *o.TaxName
}

// GetTaxNameOk returns a tuple with the TaxName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) GetTaxNameOk() (*string, bool) {
	if o == nil || IsNil(o.TaxName) {
		return nil, false
	}
	return o.TaxName, true
}

// HasTaxName returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) HasTaxName() bool {
	if o != nil && !IsNil(o.TaxName) {
		return true
	}

	return false
}

// SetTaxName gets a reference to the given string and assigns it to the TaxName field.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) SetTaxName(v string) {
	o.TaxName = &v
}

// GetTaxableAmount returns the TaxableAmount field value if set, zero value otherwise.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) GetTaxableAmount() string {
	if o == nil || IsNil(o.TaxableAmount) {
		var ret string
		return ret
	}
	return *o.TaxableAmount
}

// GetTaxableAmountOk returns a tuple with the TaxableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) GetTaxableAmountOk() (*string, bool) {
	if o == nil || IsNil(o.TaxableAmount) {
		return nil, false
	}
	return o.TaxableAmount, true
}

// HasTaxableAmount returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) HasTaxableAmount() bool {
	if o != nil && !IsNil(o.TaxableAmount) {
		return true
	}

	return false
}

// SetTaxableAmount gets a reference to the given string and assigns it to the TaxableAmount field.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) SetTaxableAmount(v string) {
	o.TaxableAmount = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) GetTaxAmount() string {
	if o == nil || IsNil(o.TaxAmount) {
		var ret string
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) GetTaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given string and assigns it to the TaxAmount field.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) SetTaxAmount(v string) {
	o.TaxAmount = &v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) GetTaxRate() string {
	if o == nil || IsNil(o.TaxRate) {
		var ret string
		return ret
	}
	return *o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) GetTaxRateOk() (*string, bool) {
	if o == nil || IsNil(o.TaxRate) {
		return nil, false
	}
	return o.TaxRate, true
}

// HasTaxRate returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) HasTaxRate() bool {
	if o != nil && !IsNil(o.TaxRate) {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given string and assigns it to the TaxRate field.
func (o *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) SetTaxRate(v string) {
	o.TaxRate = &v
}

func (o CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaxName) {
		toSerialize["taxName"] = o.TaxName
	}
	if !IsNil(o.TaxableAmount) {
		toSerialize["taxableAmount"] = o.TaxableAmount
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["taxAmount"] = o.TaxAmount
	}
	if !IsNil(o.TaxRate) {
		toSerialize["taxRate"] = o.TaxRate
	}
	return toSerialize, nil
}

type NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner struct {
	value *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner
	isSet bool
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) Get() *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner {
	return v.value
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) Set(val *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner(val *CreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) *NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner {
	return &NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner{value: val, isSet: true}
}

func (v NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEphemeralTransactionSuccessLineItemsInnerJurisesInnerTaxesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


