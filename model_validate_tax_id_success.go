/*
Anrok API

# API reference  The Anrok API server is accessible at `https://api.anrok.com`.  All requests are HTTP POSTs with JSON in the body.  Authentication is via an HTTP header `Authorization: Bearer {apiKey}`.  The default rate limit for a seller account is 10 API requests per second. 

API version: 1.1
Contact: support@anrok.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValidateTaxIdSuccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateTaxIdSuccess{}

// ValidateTaxIdSuccess struct for ValidateTaxIdSuccess
type ValidateTaxIdSuccess struct {
	// List of applicable taxable jurisdictions that require tax ID collection/validation based on the customer address.
	Jurises []ValidateTaxIdSuccessJurisesInner `json:"jurises,omitempty"`
}

// NewValidateTaxIdSuccess instantiates a new ValidateTaxIdSuccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateTaxIdSuccess() *ValidateTaxIdSuccess {
	this := ValidateTaxIdSuccess{}
	return &this
}

// NewValidateTaxIdSuccessWithDefaults instantiates a new ValidateTaxIdSuccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateTaxIdSuccessWithDefaults() *ValidateTaxIdSuccess {
	this := ValidateTaxIdSuccess{}
	return &this
}

// GetJurises returns the Jurises field value if set, zero value otherwise.
func (o *ValidateTaxIdSuccess) GetJurises() []ValidateTaxIdSuccessJurisesInner {
	if o == nil || IsNil(o.Jurises) {
		var ret []ValidateTaxIdSuccessJurisesInner
		return ret
	}
	return o.Jurises
}

// GetJurisesOk returns a tuple with the Jurises field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateTaxIdSuccess) GetJurisesOk() ([]ValidateTaxIdSuccessJurisesInner, bool) {
	if o == nil || IsNil(o.Jurises) {
		return nil, false
	}
	return o.Jurises, true
}

// HasJurises returns a boolean if a field has been set.
func (o *ValidateTaxIdSuccess) HasJurises() bool {
	if o != nil && !IsNil(o.Jurises) {
		return true
	}

	return false
}

// SetJurises gets a reference to the given []ValidateTaxIdSuccessJurisesInner and assigns it to the Jurises field.
func (o *ValidateTaxIdSuccess) SetJurises(v []ValidateTaxIdSuccessJurisesInner) {
	o.Jurises = v
}

func (o ValidateTaxIdSuccess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateTaxIdSuccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jurises) {
		toSerialize["jurises"] = o.Jurises
	}
	return toSerialize, nil
}

type NullableValidateTaxIdSuccess struct {
	value *ValidateTaxIdSuccess
	isSet bool
}

func (v NullableValidateTaxIdSuccess) Get() *ValidateTaxIdSuccess {
	return v.value
}

func (v *NullableValidateTaxIdSuccess) Set(val *ValidateTaxIdSuccess) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateTaxIdSuccess) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateTaxIdSuccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateTaxIdSuccess(val *ValidateTaxIdSuccess) *NullableValidateTaxIdSuccess {
	return &NullableValidateTaxIdSuccess{value: val, isSet: true}
}

func (v NullableValidateTaxIdSuccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateTaxIdSuccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


