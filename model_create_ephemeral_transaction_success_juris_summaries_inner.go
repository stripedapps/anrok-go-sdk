/*
Anrok API

# API reference  The Anrok API server is accessible at `https://api.anrok.com`.  All requests are HTTP POSTs with JSON in the body.  Authentication is via an HTTP header `Authorization: Bearer {apiKey}`.  The default rate limit for a seller account is 10 API requests per second. 

API version: 1.1
Contact: support@anrok.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateEphemeralTransactionSuccessJurisSummariesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEphemeralTransactionSuccessJurisSummariesInner{}

// CreateEphemeralTransactionSuccessJurisSummariesInner struct for CreateEphemeralTransactionSuccessJurisSummariesInner
type CreateEphemeralTransactionSuccessJurisSummariesInner struct {
	// The name of the jurisdiction.
	Name *string `json:"name,omitempty"`
	NotTaxedReasons []NotTaxedReason `json:"notTaxedReasons,omitempty"`
}

// NewCreateEphemeralTransactionSuccessJurisSummariesInner instantiates a new CreateEphemeralTransactionSuccessJurisSummariesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEphemeralTransactionSuccessJurisSummariesInner() *CreateEphemeralTransactionSuccessJurisSummariesInner {
	this := CreateEphemeralTransactionSuccessJurisSummariesInner{}
	return &this
}

// NewCreateEphemeralTransactionSuccessJurisSummariesInnerWithDefaults instantiates a new CreateEphemeralTransactionSuccessJurisSummariesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEphemeralTransactionSuccessJurisSummariesInnerWithDefaults() *CreateEphemeralTransactionSuccessJurisSummariesInner {
	this := CreateEphemeralTransactionSuccessJurisSummariesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateEphemeralTransactionSuccessJurisSummariesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEphemeralTransactionSuccessJurisSummariesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessJurisSummariesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateEphemeralTransactionSuccessJurisSummariesInner) SetName(v string) {
	o.Name = &v
}

// GetNotTaxedReasons returns the NotTaxedReasons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEphemeralTransactionSuccessJurisSummariesInner) GetNotTaxedReasons() []NotTaxedReason {
	if o == nil {
		var ret []NotTaxedReason
		return ret
	}
	return o.NotTaxedReasons
}

// GetNotTaxedReasonsOk returns a tuple with the NotTaxedReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEphemeralTransactionSuccessJurisSummariesInner) GetNotTaxedReasonsOk() ([]NotTaxedReason, bool) {
	if o == nil || IsNil(o.NotTaxedReasons) {
		return nil, false
	}
	return o.NotTaxedReasons, true
}

// HasNotTaxedReasons returns a boolean if a field has been set.
func (o *CreateEphemeralTransactionSuccessJurisSummariesInner) HasNotTaxedReasons() bool {
	if o != nil && !IsNil(o.NotTaxedReasons) {
		return true
	}

	return false
}

// SetNotTaxedReasons gets a reference to the given []NotTaxedReason and assigns it to the NotTaxedReasons field.
func (o *CreateEphemeralTransactionSuccessJurisSummariesInner) SetNotTaxedReasons(v []NotTaxedReason) {
	o.NotTaxedReasons = v
}

func (o CreateEphemeralTransactionSuccessJurisSummariesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEphemeralTransactionSuccessJurisSummariesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.NotTaxedReasons != nil {
		toSerialize["notTaxedReasons"] = o.NotTaxedReasons
	}
	return toSerialize, nil
}

type NullableCreateEphemeralTransactionSuccessJurisSummariesInner struct {
	value *CreateEphemeralTransactionSuccessJurisSummariesInner
	isSet bool
}

func (v NullableCreateEphemeralTransactionSuccessJurisSummariesInner) Get() *CreateEphemeralTransactionSuccessJurisSummariesInner {
	return v.value
}

func (v *NullableCreateEphemeralTransactionSuccessJurisSummariesInner) Set(val *CreateEphemeralTransactionSuccessJurisSummariesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEphemeralTransactionSuccessJurisSummariesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEphemeralTransactionSuccessJurisSummariesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEphemeralTransactionSuccessJurisSummariesInner(val *CreateEphemeralTransactionSuccessJurisSummariesInner) *NullableCreateEphemeralTransactionSuccessJurisSummariesInner {
	return &NullableCreateEphemeralTransactionSuccessJurisSummariesInner{value: val, isSet: true}
}

func (v NullableCreateEphemeralTransactionSuccessJurisSummariesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEphemeralTransactionSuccessJurisSummariesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


